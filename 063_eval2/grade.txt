Grading at 10/27/2024:03:12:44.169167
For commit ID ed9fb5afd825086e139815411cc5358d68f243a8
Grading at Sat Oct 26 11:12:26 PM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 ./story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.2: Current test is story-step1 ./story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.3: Current test is story-step1 ./test-step1/separate-line.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

1.4: Current test is story-step1 ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

1.5: Current test is story-step1 ./test-step1/empty.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.6: Current test is story-step1 ./test-step1/newline.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 ./words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.2: Current test is story-step2 ./test-step2/double-colon.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.3: Current test is story-step2 ./test-step2/no-colon.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

2.4: Current test is story-step2 ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

2.5: Current test is story-step2 ./test-step1/empty.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.6: Current test is story-step2 ./test-step1/newline.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 ./words.txt ./story.txt 
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.2: Current test is story-step3 ./words.txt ./story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.3: Current test is story-step3 ./test-step1/nonexist.txt ./story.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.4: Current test is story-step3 ./test-step1/empty.txt ./story.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.5: Current test is story-step3 ./test-step1/newline.txt ./story.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.6: Current test is story-step3 ./words.txt ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.7: Current test is story-step3 ./test-step1/nonexist.txt ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.8: Current test is story-step3 ./test-step1/empty.txt ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.9: Current test is story-step3 ./test-step1/newline.txt ./test-step1/nonexist.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.10: Current test is story-step3 ./words.txt ./test-step1/empty.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.11: Current test is story-step3 ./test-step1/nonexist.txt ./test-step1/empty.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.12: Current test is story-step3 ./test-step1/empty.txt ./test-step1/empty.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.13: Current test is story-step3 ./test-step1/newline.txt ./test-step1/empty.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.14: Current test is story-step3 ./words.txt ./test-step1/newline.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.15: Current test is story-step3 ./test-step1/nonexist.txt ./test-step1/newline.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.16: Current test is story-step3 ./test-step1/empty.txt ./test-step1/newline.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.17: Current test is story-step3 ./test-step1/newline.txt ./test-step1/newline.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
The code did not compile!

Overall Grade: NO GRADE YET
